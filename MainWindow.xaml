<Controls:MetroWindow
    x:Class="ChoEazyCopy.MainWindow"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:Controls="clr-namespace:MahApps.Metro.Controls;assembly=MahApps.Metro"
    xmlns:Properties="clr-namespace:ChoEazyCopy.Properties"
    xmlns:iconPacks="http://metro.mahapps.com/winfx/xaml/iconpacks"
    xmlns:local="clr-namespace:ChoEazyCopy"
    xmlns:sfw="clr-namespace:SoftFluent.Windows;assembly=SoftFluent.Windows"
    xmlns:sys="clr-namespace:System;assembly=mscorlib"
    xmlns:wpg="clr-namespace:System.Windows.Controls"
    x:Name="ChoEazyCopyWindow"
    Title="ChoEazyCopy - Cinchoo Inc."
    Width="950"
    Height="600"
    MinWidth="500"
    MinHeight="400"
    AllowDrop="True"
    BorderBrush="{DynamicResource AccentColorBrush}"
    BorderThickness="1"
    Closed="Window_Closed"
    Closing="Window_Closing"
    Icon="App.ico"
    Loaded="Window_Loaded"
    ResizeMode="CanResizeWithGrip"
    TitleCaps="False">
    <Controls:MetroWindow.RightWindowCommands>
        <Controls:WindowCommands>
            <Controls:ToggleSwitch
                Margin="10,0,0,0"
                FontSize="16"
                Foreground="LightYellow"
                IsChecked="{Binding RememberWindowSizeAndPosition}"
                ToolTip="Remember windows position/size." />
        </Controls:WindowCommands>
    </Controls:MetroWindow.RightWindowCommands>
    <Controls:MetroWindow.LeftWindowCommands>
        <Controls:WindowCommands>
            <Button
                x:Name="btnApplicationCmds"
                Click="btnApplicationCmds_Click"
                ToolTip="Application Commands">
                <Image Source="{iconPacks:FontAwesomeImage Kind=CogSolid}" />
                <Button.ContextMenu>
                    <ContextMenu>
                        <MenuItem
                            x:Name="mnuLaunchNewInstance"
                            Click="mnuLaunchNewInstance_Click"
                            Header="Launch New Instance">
                            <MenuItem.Icon>
                                <Image Source="Resources/OpenNewWindow.png" />
                            </MenuItem.Icon>
                        </MenuItem>
                        <MenuItem
                            x:Name="mnuRunasAdministrator"
                            Click="mnuRunasAdministrator_Click"
                            Header="Run as Administrator">
                            <MenuItem.Icon>
                                <Image Source="Resources/Security.png" />
                            </MenuItem.Icon>
                        </MenuItem>
                        <MenuItem
                            x:Name="mnuRegisterShellExtensions"
                            Click="mnuRegisterShellExtensions_Click"
                            Header="Register Shell Extensions">
                            <MenuItem.Icon>
                                <Image Source="Resources/Registry.png" />
                            </MenuItem.Icon>
                        </MenuItem>
                        <MenuItem
                            x:Name="mnuUnregisterShellExtensions"
                            Click="mnuUnregisterShellExtensions_Click"
                            Header="Unregister Shell Extensions">
                            <MenuItem.Icon>
                                <Image Source="Resources/RemoveRegistry.png" />
                            </MenuItem.Icon>
                        </MenuItem>
                        <Separator />
                        <MenuItem
                            x:Name="mnuAlwaysOnTop"
                            Click="mnuAlwaysOnTop_Click"
                            Header="Always on Top"
                            IsCheckable="True"
                            IsChecked="False">
                            <!--<MenuItem.Icon>
                                <iconPacks:FontAwesome Kind="HandshakeRegular"></iconPacks:FontAwesome>
                            </MenuItem.Icon>-->
                        </MenuItem>
                        <MenuItem
                            x:Name="mnuRunatSystemsStartup"
                            Click="mnuRunatSystemsStartup_Click"
                            Header="Run at Systems Startup"
                            IsCheckable="True">
                            <!--<MenuItem.Icon>
                                <iconPacks:FontAwesome Kind="ShieldAltSolid"></iconPacks:FontAwesome>
                            </MenuItem.Icon>-->
                        </MenuItem>
                        <MenuItem
                            x:Name="mnuDarkTheme"
                            Click="mnuDarkTheme_Click"
                            Header="Enable Dark Theme"
                            IsCheckable="True"
                            IsChecked="False">
                            <!--<MenuItem.Icon>
                                <iconPacks:FontAwesome Kind="HandshakeRegular"></iconPacks:FontAwesome>
                            </MenuItem.Icon>-->
                        </MenuItem>

                    </ContextMenu>
                </Button.ContextMenu>
            </Button>
        </Controls:WindowCommands>
    </Controls:MetroWindow.LeftWindowCommands>
    <Window.Resources>
        <ContextMenu x:Key="expControlPanelContextMenu">
            <MenuItem
                x:Name="mnuResetExpander"
                Click="mnuResetExpander_Click"
                Header="Reset" />
        </ContextMenu>

        <ContextMenu x:Key="TextBoxContextMenu" Background="White">
            <MenuItem Command="ApplicationCommands.Copy">
                <MenuItem.Icon>
                    <Image Source="Resources/Copy.png" />
                </MenuItem.Icon>
            </MenuItem>
            <MenuItem Command="ApplicationCommands.Cut">
                <MenuItem.Icon>
                    <Image Source="Resources/Cut.png" />
                </MenuItem.Icon>
            </MenuItem>
            <MenuItem Command="ApplicationCommands.Paste">
                <MenuItem.Icon>
                    <Image Source="Resources/Paste.png" />
                </MenuItem.Icon>
            </MenuItem>
        </ContextMenu>
        <Style TargetType="ToolTip">
            <Style.Triggers>
                <Trigger Property="Content" Value="{x:Static sys:String.Empty}">
                    <Setter Property="Visibility" Value="Collapsed" />
                </Trigger>
                <Trigger Property="Content" Value="{x:Null}">
                    <Setter Property="Visibility" Value="Collapsed" />
                </Trigger>
            </Style.Triggers>
            <Style.Resources>
                <Style TargetType="ContentPresenter">
                    <Style.Resources>
                        <Style TargetType="TextBlock">
                            <Setter Property="TextWrapping" Value="Wrap" />
                        </Style>
                    </Style.Resources>
                </Style>
            </Style.Resources>
            <Setter Property="MaxWidth" Value="500" />
        </Style>
        <Style TargetType="{x:Type TextBox}">
            <Setter Property="ContextMenu" Value="{StaticResource TextBoxContextMenu}" />
        </Style>
        <Style TargetType="{x:Type Button}">
            <Style.Resources>
                <Style TargetType="{x:Type Image}">
                    <Style.Triggers>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Opacity" Value="0.5" />
                        </Trigger>
                    </Style.Triggers>
                </Style>
            </Style.Resources>
        </Style>
        <Style x:Key="GridViewColumnHeaderStyle1" TargetType="{x:Type GridViewColumnHeader}">
            <Setter Property="HorizontalContentAlignment" Value="Left" />
            <Setter Property="Background" Value="{Binding WindowTitleBrush}" />
            <Setter Property="Foreground" Value="{Binding TitleForeground}" />
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="true">
                    <Setter Property="Background" Value="Transparent" />
                </Trigger>
            </Style.Triggers>
        </Style>
        <Style
            x:Key="WaterMarkTextBoxStyle"
            BasedOn="{StaticResource {x:Type TextBox}}"
            TargetType="{x:Type TextBox}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type TextBox}">
                        <Grid>
                            <Border
                                x:Name="Bd"
                                Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                SnapsToDevicePixels="True">
                                <Grid>
                                    <ScrollViewer x:Name="PART_ContentHost" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                                    <TextBlock
                                        x:Name="textBlock"
                                        Padding="2,0,0,0"
                                        Opacity="0.5"
                                        Text="{TemplateBinding Tag}"
                                        TextWrapping="Wrap"
                                        Visibility="Hidden" />
                                </Grid>
                            </Border>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="BorderBrush" Value="{Binding TextBoxFocusBorderBrush}" />
                                <Setter Property="Background" Value="Transparent" />
                            </Trigger>
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="Text" Value="" />
                                </MultiTrigger.Conditions>
                                <Setter TargetName="textBlock" Property="Visibility" Value="Visible" />
                            </MultiTrigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="StatusBarTextBlock" TargetType="{x:Type TextBlock}">
            <Setter Property="TextWrapping" Value="NoWrap" />
            <Setter Property="TextTrimming" Value="CharacterEllipsis" />
            <Setter Property="Padding" Value="2,0" />
        </Style>
        <local:BoolInverterConverter x:Key="BoolInverterConverter1" />
        <local:BoolInverterConverter x:Key="BoolInverterConverter2" />
        <local:BoolToBackgroundColorConverter x:Key="BoolToBackgroundColorConverter1" />
        <local:BoolToForegroundColorConverter x:Key="BoolToForegroundColorConverter1" />
        <local:BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter1" />
        <local:BooleanToVisibilityInverterConverter x:Key="BooleanToVisibilityInverterConverter1" />
        <local:BooleanToVisibilityInverterConverterEx x:Key="BooleanToVisibilityInverterConverterEx1" />
        <local:MathConverter x:Key="MathConverter" />

        <Style TargetType="{x:Type local:ChoMruComboBox}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type local:ChoMruComboBox}">
                        <ComboBox
                            IsEditable="True"
                            IsTextSearchCaseSensitive="False"
                            IsTextSearchEnabled="True"
                            ItemsSource="{Binding MruSource, RelativeSource={RelativeSource TemplatedParent}}"
                            Text="{Binding Text, RelativeSource={RelativeSource TemplatedParent}, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

    </Window.Resources>
    <DockPanel>
        <StatusBar
            Width="Auto"
            Margin="5,0,5,5"
            DockPanel.Dock="Bottom">
            <StatusBarItem
                Padding="0"
                VerticalContentAlignment="Top"
                Focusable="False">
                <TextBlock x:Name="sbAppStatus" Style="{StaticResource StatusBarTextBlock}"><Run Text="{Binding AppStatusText}" /></TextBlock>
            </StatusBarItem>
        </StatusBar>
        <Grid>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*" />
                <ColumnDefinition Width="5" />
                <ColumnDefinition Width="{Binding ControlPanelWidth, Mode=TwoWay}">
                    <ColumnDefinition.Style>
                        <Style TargetType="{x:Type ColumnDefinition}">
                            <Setter Property="MinWidth" Value="350" />
                            <!--  Default MinHeight  -->
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding ElementName=expControlPanel, Path=IsExpanded}" Value="False">
                                    <Setter Property="MinWidth" Value="24" />
                                    <!--  MinHeight when Collapsed  -->
                                    <Setter Property="MaxWidth" Value="40" />
                                </DataTrigger>
                                <DataTrigger Binding="{Binding ElementName=expControlPanel, Path=IsExpanded}" Value="True">
                                    <Setter Property="MaxWidth" Value="{Binding ElementName=ChoEazyCopyWindow, Path=Width, Converter={StaticResource MathConverter}, ConverterParameter=@VALUE/2}" />
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </ColumnDefinition.Style>
                </ColumnDefinition>
            </Grid.ColumnDefinitions>
            <DockPanel Grid.Column="0" LastChildFill="true">
                <Ribbon
                    x:Name="RibbonWin"
                    MinWidth="500"
                    Margin="0,0,5,0"
                    Background="{Binding ThemeBackgroundBrush}"
                    ContextMenu="{x:Null}"
                    DockPanel.Dock="Top"
                    Foreground="Black"
                    Loaded="RibbonWin_Loaded"
                    SelectedIndex="0">
                    <Ribbon.ApplicationMenu>
                        <RibbonApplicationMenu Visibility="Collapsed" />
                    </Ribbon.ApplicationMenu>
                    <RibbonTab
                        ContextMenu="{x:Null}"
                        Header="Home"
                        KeyTip="H">
                        <RibbonGroup
                            x:Name="HomeGroup"
                            ContextMenu="{x:Null}"
                            Header="Action">
                            <RibbonButton
                                x:Name="btnRun"
                                Click="btnRun_Click"
                                ContextMenu="{x:Null}"
                                KeyTip="R"
                                Label="Run"
                                LargeImageSource="Resources\Run.png" />
                            <RibbonButton
                                x:Name="btnStop"
                                Click="btnStop_Click"
                                ContextMenu="{x:Null}"
                                KeyTip="T"
                                Label="Stop"
                                SmallImageSource="Resources\Stop.png" />
                            <RibbonButton
                                x:Name="btnClear"
                                Click="btnClear_Click"
                                ContextMenu="{x:Null}"
                                KeyTip="E"
                                Label="Clear Output"
                                SmallImageSource="Resources\Erase.png" />
                            <RibbonCheckBox
                                x:Name="btnScrollOutput"
                                ContextMenu="{x:Null}"
                                IsChecked="{Binding ScrollOutput}"
                                KeyTip="L"
                                Label="Scroll Output"
                                SmallImageSource="Resources\Scroll.png" />
                        </RibbonGroup>
                        <RibbonGroup
                            x:Name="FileGroup"
                            ContextMenu="{x:Null}"
                            Header="File">
                            <!--<RibbonButton x:Name="btnNewFile" LargeImageSource="Resources\NewFile.png" Label="New" KeyTip="N" Click="btnNewFile_Click"  ContextMenu="{x:Null}"/>-->
                            <RibbonMenuButton
                                x:Name="btnNewFile"
                                KeyTip="N"
                                Label="New"
                                LargeImageSource="Resources\NewFile.png"
                                SmallImageSource="Resources\NewFile.png">
                                <RibbonMenuItem
                                    Click="btnNewFile_Click"
                                    ContextMenu="{x:Null}"
                                    Header="Empty Job"
                                    ImageSource="Resources\NewFile.png" />
                                <RibbonMenuItem
                                    Click="btnNewSyncFile_Click"
                                    ContextMenu="{x:Null}"
                                    Header="Synchronization Job"
                                    ImageSource="Resources\SyncJob.png"
                                    ToolTip="With the Synchronization job all new and modified files of source folder are mirrored to destination folder. Files and folders which don't exist anymore in the source folder when the job runs will be deleted in the destination folder." />
                                <RibbonMenuItem
                                    Click="btnNewCopyFile_Click"
                                    ContextMenu="{x:Null}"
                                    Header="Copy Job"
                                    ImageSource="Resources\CopyJob.png"
                                    ToolTip="With the Copy job all new and modified files of source folder are also copied to destination folder. However files and folders which previously has been copied to the destination folder but doesn't exist anymore when the job runs, will be kept in the destination folder." />
                                <RibbonMenuItem
                                    Click="btnNewMoveFile_Click"
                                    ContextMenu="{x:Null}"
                                    Header="Move Job"
                                    ImageSource="Resources\MoveJob.png"
                                    ToolTip="With the Move job, move all files/folders from source location to destination location. All successfull moved files/folders are removed from the source." />
                            </RibbonMenuButton>
                            <RibbonButton
                                x:Name="btnOpenFile"
                                Click="btnOpenFile_Click"
                                ContextMenu="{x:Null}"
                                KeyTip="O"
                                Label="Open"
                                SmallImageSource="Resources\OpenFile.png" />
                            <RibbonButton
                                x:Name="btnSaveFile"
                                Click="btnSaveFile_Click"
                                ContextMenu="{x:Null}"
                                KeyTip="S"
                                Label="Save"
                                SmallImageSource="Resources\SaveFile.png" />
                            <RibbonButton
                                x:Name="btnSaveAsFile"
                                Click="btnSaveAsFile_Click"
                                ContextMenu="{x:Null}"
                                KeyTip="A"
                                Label="Save As"
                                SmallImageSource="Resources\SaveAsFile.png" />
                        </RibbonGroup>
                        <RibbonGroup x:Name="DonateGroup" ContextMenu="{x:Null}">
                            <RibbonButton
                                x:Name="btnDonate"
                                Click="BtnDonate_Click"
                                ContextMenu="{x:Null}"
                                KeyTip="D"
                                Label="Donate"
                                LargeImageSource="Resources\Donate.png"
                                ToolTip="Your support is much appreciated." />
                        </RibbonGroup>
                        <!--<RibbonGroup VerticalAlignment="Center" ContextMenu="{x:Null}">
                            <DockPanel LastChildFill="True">
                                <TextBlock DockPanel.Dock="Bottom">Settings File</TextBlock>
                                <TextBlock x:Name="tbSettingsName" FontSize="24" FontWeight="Bold" Foreground="DarkBlue"
                                            Width="Auto" VerticalAlignment="Stretch" FontFamily="Verdana"
                                           Text="{Binding SettingsFileName}" ToolTip="{Binding SettingsFilePath}"
                                           />
                            </DockPanel>
                        </RibbonGroup>-->
                        <RibbonGroup x:Name="HelpGroup" ContextMenu="{x:Null}">
                            <RibbonButton
                                x:Name="btnHelp"
                                Click="btnHelp_Click"
                                ContextMenu="{x:Null}"
                                KeyTip="D"
                                Label="Help"
                                LargeImageSource="Resources\Help.png"
                                ToolTip="RoboCopy offical help" />
                        </RibbonGroup>
                    </RibbonTab>
                </Ribbon>

                <DockPanel
                    x:Name="dockPanel1"
                    HorizontalAlignment="Stretch"
                    VerticalAlignment="Stretch"
                    FocusManager.FocusedElement="{Binding ElementName=txtFolder}"
                    LastChildFill="True">
                    <Grid Width="Auto" DockPanel.Dock="Top">
                        <Grid.RowDefinitions>
                            <RowDefinition />
                            <RowDefinition />
                        </Grid.RowDefinitions>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition />
                        </Grid.ColumnDefinitions>
                        <Border
                            Grid.Row="0"
                            Margin="5,5,5,0"
                            Background="{Binding WindowTitleBrush}"
                            BorderBrush="{Binding WindowTitleBrush}"
                            BorderThickness="1">
                            <DockPanel LastChildFill="true">
                                <Label FontWeight="Bold" Foreground="{Binding TitleForeground}">TASK FILE:</Label>
                                <TextBlock
                                    VerticalAlignment="Center"
                                    Foreground="{Binding TitleForeground}"
                                    Text="{Binding SettingsFileName}"
                                    ToolTip="{Binding SettingsFilePath}" />

                            </DockPanel>
                        </Border>

                        <GroupBox
                            x:Name="grpFolders"
                            Grid.Row="1"
                            Grid.Column="0"
                            Height="Auto"
                            Margin="5">
                            <GroupBox.Header>
                                <DockPanel LastChildFill="True">
                                    <Button
                                        xmlns:Controls="clr-namespace:MahApps.Metro.Controls;assembly=MahApps.Metro"
                                        xmlns:Converters="clr-namespace:MahApps.Metro.Converters;assembly=MahApps.Metro"
                                        x:Name="btnSwapDir"
                                        Click="btnSwapDir_Click"
                                        Content="Swap Directories"
                                        DockPanel.Dock="Right"
                                        Style="{DynamicResource MetroButton}" />
                                    <TextBlock
                                        xmlns:Controls="clr-namespace:MahApps.Metro.Controls;assembly=MahApps.Metro"
                                        xmlns:Converters="clr-namespace:MahApps.Metro.Converters;assembly=MahApps.Metro"
                                        VerticalAlignment="Center"
                                        Text="CHOOSE FOLDERS">
                                        <TextBlock.Foreground>
                                            <MultiBinding Converter="{x:Static Converters:BackgroundToForegroundConverter.Instance}">
                                                <Binding
                                                    Mode="OneWay"
                                                    Path="Background"
                                                    RelativeSource="{RelativeSource AncestorType=GroupBox}" />
                                                <Binding
                                                    Mode="OneWay"
                                                    Path="(Controls:GroupBoxHelper.HeaderForeground)"
                                                    RelativeSource="{RelativeSource AncestorType=GroupBox}" />
                                            </MultiBinding>
                                        </TextBlock.Foreground>
                                    </TextBlock>
                                </DockPanel>
                            </GroupBox.Header>

                            <Grid Width="Auto" Height="Auto">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="35*" />
                                    <ColumnDefinition Width="145*" />
                                    <ColumnDefinition Width="368*" />
                                    <ColumnDefinition Width="20" />
                                </Grid.ColumnDefinitions>
                                <Grid.RowDefinitions>
                                    <RowDefinition />
                                    <RowDefinition />
                                    <RowDefinition />
                                    <RowDefinition />
                                </Grid.RowDefinitions>
                                <Label
                                    Grid.Row="0"
                                    Grid.ColumnSpan="2"
                                    FontWeight="Bold">
                                    Source Directory
                                </Label>
                                <TextBox
                                    x:Name="txtSourceDirectory"
                                    Grid.Row="1"
                                    Grid.Column="0"
                                    Grid.ColumnSpan="3"
                                    Margin="1"
                                    VerticalAlignment="Stretch"
                                    BorderBrush="{Binding SourceDirStatus, Converter={local:SourceDirBorderColorConverter}}"
                                    TabIndex="0"
                                    Text="{Binding Path=AppSettings.SourceDirectory, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                    ToolTip="{Binding Path=SourceDirTooltip}" />
                                <Button
                                    x:Name="btnSourceDirBrowse"
                                    Grid.Row="1"
                                    Grid.Column="3"
                                    Margin="1,0,1,2"
                                    VerticalAlignment="Bottom"
                                    Click="btnSourceDirBrowse_Click"
                                    Style="{StaticResource {x:Static ToolBar.ButtonStyleKey}}"
                                    TabIndex="1"
                                    ToolTip="Choose source directory...">
                                    <Image Source="Resources/OpenFolder.png">
                                        <Image.Style>
                                            <Style TargetType="{x:Type Image}">
                                                <Style.Triggers>
                                                    <Trigger Property="IsEnabled" Value="False">
                                                        <Setter Property="Opacity" Value="0.5" />
                                                    </Trigger>
                                                </Style.Triggers>
                                            </Style>
                                        </Image.Style>
                                    </Image>
                                </Button>
                                <Label
                                    Grid.Row="2"
                                    Grid.ColumnSpan="2"
                                    FontWeight="Bold">
                                    Destination Directory
                                </Label>
                                <TextBox
                                    x:Name="txtDestDirectory"
                                    Grid.Row="3"
                                    Grid.Column="0"
                                    Grid.ColumnSpan="3"
                                    Margin="1"
                                    TabIndex="2"
                                    Text="{Binding Path=AppSettings.DestDirectory, UpdateSourceTrigger=PropertyChanged}"
                                    ToolTip="Destination directory." />
                                <Button
                                    x:Name="btnDestDirBrowse"
                                    Grid.Row="3"
                                    Grid.Column="3"
                                    Margin="1,2,1,1"
                                    Click="btnDestDirBrowse_Click"
                                    Style="{StaticResource {x:Static ToolBar.ButtonStyleKey}}"
                                    TabIndex="3"
                                    ToolTip="Choose destination directory...">
                                    <Image Source="Resources/OpenFolder.png">
                                        <Image.Style>
                                            <Style TargetType="{x:Type Image}">
                                                <Style.Triggers>
                                                    <Trigger Property="IsEnabled" Value="False">
                                                        <Setter Property="Opacity" Value="0.5" />
                                                    </Trigger>
                                                </Style.Triggers>
                                            </Style>
                                        </Image.Style>
                                    </Image>
                                </Button>
                            </Grid>
                        </GroupBox>
                    </Grid>
                    <GroupBox
                        DockPanel.Dock="Bottom"
                        IsEnabled="{Binding IsNotRunning}"
                        Visibility="{Binding Path=AppSettings.ListOnly, Converter={StaticResource BooleanToVisibilityInverterConverter1}}">
                        <GroupBox.Header>
                            <DockPanel LastChildFill="True">
                                <CheckBox
                                    xmlns:Controls="clr-namespace:MahApps.Metro.Controls;assembly=MahApps.Metro"
                                    xmlns:Converters="clr-namespace:MahApps.Metro.Converters;assembly=MahApps.Metro"
                                    Content="SHOW PROGRESS"
                                    DockPanel.Dock="Right"
                                    IsChecked="{Binding Path=AppSettings.ShowRoboCopyProgress}"
                                    Style="{DynamicResource MetroCheckBox}">
                                    <CheckBox.Foreground>
                                        <MultiBinding Converter="{x:Static Converters:BackgroundToForegroundConverter.Instance}">
                                            <Binding
                                                Mode="OneWay"
                                                Path="Background"
                                                RelativeSource="{RelativeSource AncestorType=GroupBox}" />
                                            <Binding
                                                Mode="OneWay"
                                                Path="(Controls:GroupBoxHelper.HeaderForeground)"
                                                RelativeSource="{RelativeSource AncestorType=GroupBox}" />
                                        </MultiBinding>
                                    </CheckBox.Foreground>
                                </CheckBox>
                                <TextBlock
                                    xmlns:Controls="clr-namespace:MahApps.Metro.Controls;assembly=MahApps.Metro"
                                    xmlns:Converters="clr-namespace:MahApps.Metro.Converters;assembly=MahApps.Metro"
                                    VerticalAlignment="Center"
                                    Text="ROBOCOPY PROGRESS">
                                    <TextBlock.Foreground>
                                        <MultiBinding Converter="{x:Static Converters:BackgroundToForegroundConverter.Instance}">
                                            <Binding
                                                Mode="OneWay"
                                                Path="Background"
                                                RelativeSource="{RelativeSource AncestorType=GroupBox}" />
                                            <Binding
                                                Mode="OneWay"
                                                Path="(Controls:GroupBoxHelper.HeaderForeground)"
                                                RelativeSource="{RelativeSource AncestorType=GroupBox}" />
                                        </MultiBinding>
                                    </TextBlock.Foreground>
                                </TextBlock>
                            </DockPanel>
                        </GroupBox.Header>

                        <DockPanel x:Name="dpRoboCopyProgress" LastChildFill="true">
                            <TextBlock
                                DockPanel.Dock="Top"
                                Text="Robocopy progress disabled."
                                Visibility="{Binding Path=AppSettings.ShowRoboCopyProgress, Converter={StaticResource BooleanToVisibilityInverterConverter1}}" />
                            <TextBlock
                                DockPanel.Dock="Top"
                                Text="{Binding RobocopyProgresssText}"
                                Visibility="{Binding Path=AppSettings.ShowRoboCopyProgress, Converter={StaticResource BooleanToVisibilityConverter1}}" />
                            <Grid Visibility="{Binding Path=AppSettings.ShowRoboCopyProgress, Converter={StaticResource BooleanToVisibilityConverter1}}">
                                <ProgressBar
                                    x:Name="pbar"
                                    Height="15"
                                    Margin="0,5,0,5"
                                    HorizontalAlignment="Stretch"
                                    Maximum="100"
                                    Minimum="0"
                                    Value="{Binding RobocopyProgresssBarValue}" />
                                <TextBlock
                                    HorizontalAlignment="Center"
                                    VerticalAlignment="Center"
                                    Foreground="White"
                                    Text="{Binding ElementName=pbar, Path=Value, StringFormat={}{0:0}%}" />
                            </Grid>
                        </DockPanel>
                    </GroupBox>
                    <Grid Width="Auto">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition />
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="100" MinHeight="100" />
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="*" />
                        </Grid.RowDefinitions>
                        <GroupBox
                            Grid.Row="0"
                            Margin="5,0,5,0"
                            HorizontalAlignment="Stretch"
                            VerticalAlignment="Stretch">
                            <GroupBox.Header>
                                <DockPanel LastChildFill="True">
                                    <CheckBox
                                        xmlns:Controls="clr-namespace:MahApps.Metro.Controls;assembly=MahApps.Metro"
                                        xmlns:Converters="clr-namespace:MahApps.Metro.Converters;assembly=MahApps.Metro"
                                        Content="TEST RUN"
                                        DockPanel.Dock="Right"
                                        IsChecked="{Binding Path=AppSettings.ListOnly}"
                                        Style="{DynamicResource MetroCheckBox}">
                                        <CheckBox.Foreground>
                                            <MultiBinding Converter="{x:Static Converters:BackgroundToForegroundConverter.Instance}">
                                                <Binding
                                                    Mode="OneWay"
                                                    Path="Background"
                                                    RelativeSource="{RelativeSource AncestorType=GroupBox}" />
                                                <Binding
                                                    Mode="OneWay"
                                                    Path="(Controls:GroupBoxHelper.HeaderForeground)"
                                                    RelativeSource="{RelativeSource AncestorType=GroupBox}" />
                                            </MultiBinding>
                                        </CheckBox.Foreground>
                                    </CheckBox>
                                    <TextBlock
                                        xmlns:Controls="clr-namespace:MahApps.Metro.Controls;assembly=MahApps.Metro"
                                        xmlns:Converters="clr-namespace:MahApps.Metro.Converters;assembly=MahApps.Metro"
                                        VerticalAlignment="Center"
                                        Text="ROBOCOPY COMMAND">
                                        <TextBlock.Foreground>
                                            <MultiBinding Converter="{x:Static Converters:BackgroundToForegroundConverter.Instance}">
                                                <Binding
                                                    Mode="OneWay"
                                                    Path="Background"
                                                    RelativeSource="{RelativeSource AncestorType=GroupBox}" />
                                                <Binding
                                                    Mode="OneWay"
                                                    Path="(Controls:GroupBoxHelper.HeaderForeground)"
                                                    RelativeSource="{RelativeSource AncestorType=GroupBox}" />
                                            </MultiBinding>
                                        </TextBlock.Foreground>
                                    </TextBlock>
                                </DockPanel>
                            </GroupBox.Header>

                            <DockPanel LastChildFill="True">
                                <TextBox
                                    Name="txtRoboCopyCmdEx"
                                    Margin="0,3,0,2"
                                    HorizontalAlignment="Stretch"
                                    VerticalAlignment="Stretch"
                                    IsReadOnly="True"
                                    TabIndex="24"
                                    TextWrapping="Wrap"
                                    VerticalScrollBarVisibility="Auto"
                                    Visibility="Collapsed" />
                                <TextBox
                                    Name="txtRoboCopyCmd"
                                    Margin="0,3,0,2"
                                    HorizontalAlignment="Stretch"
                                    VerticalAlignment="Stretch"
                                    IsReadOnly="True"
                                    TabIndex="24"
                                    TextWrapping="Wrap"
                                    VerticalScrollBarVisibility="Auto" />
                            </DockPanel>
                        </GroupBox>
                        <GridSplitter
                            Grid.Row="1"
                            Height="1"
                            Margin="5,5,5,0"
                            HorizontalAlignment="Stretch"
                            IsTabStop="False"
                            ResizeDirection="Rows" />
                        <GroupBox
                            Grid.Row="2"
                            Margin="5,0,5,5"
                            VerticalAlignment="Stretch">
                            <GroupBox.Header>
                                <DockPanel LastChildFill="True">
                                    <CheckBox
                                        xmlns:Controls="clr-namespace:MahApps.Metro.Controls;assembly=MahApps.Metro"
                                        xmlns:Converters="clr-namespace:MahApps.Metro.Converters;assembly=MahApps.Metro"
                                        Content="SHOW LINE NUMBERS"
                                        DockPanel.Dock="Right"
                                        IsChecked="{Binding Path=AppSettings.ShowOutputLineNumbers}"
                                        Style="{DynamicResource MetroCheckBox}">
                                        <CheckBox.Foreground>
                                            <MultiBinding Converter="{x:Static Converters:BackgroundToForegroundConverter.Instance}">
                                                <Binding
                                                    Mode="OneWay"
                                                    Path="Background"
                                                    RelativeSource="{RelativeSource AncestorType=GroupBox}" />
                                                <Binding
                                                    Mode="OneWay"
                                                    Path="(Controls:GroupBoxHelper.HeaderForeground)"
                                                    RelativeSource="{RelativeSource AncestorType=GroupBox}" />
                                            </MultiBinding>
                                        </CheckBox.Foreground>
                                    </CheckBox>
                                    <TextBlock
                                        xmlns:Controls="clr-namespace:MahApps.Metro.Controls;assembly=MahApps.Metro"
                                        xmlns:Converters="clr-namespace:MahApps.Metro.Converters;assembly=MahApps.Metro"
                                        VerticalAlignment="Center"
                                        Text="OUTPUT">
                                        <TextBlock.Foreground>
                                            <MultiBinding Converter="{x:Static Converters:BackgroundToForegroundConverter.Instance}">
                                                <Binding
                                                    Mode="OneWay"
                                                    Path="Background"
                                                    RelativeSource="{RelativeSource AncestorType=GroupBox}" />
                                                <Binding
                                                    Mode="OneWay"
                                                    Path="(Controls:GroupBoxHelper.HeaderForeground)"
                                                    RelativeSource="{RelativeSource AncestorType=GroupBox}" />
                                            </MultiBinding>
                                        </TextBlock.Foreground>
                                    </TextBlock>
                                </DockPanel>
                            </GroupBox.Header>
                            <avalonEdit:TextEditor
                                xmlns:avalonEdit="http://icsharpcode.net/sharpdevelop/avalonedit"
                                Name="txtStatus"
                                FontFamily="Courier New"
                                FontSize="10pt"
                                Foreground="{Binding ControlForegroundBrush}"
                                HorizontalScrollBarVisibility="Auto"
                                KeyDown="txtStatus_KeyDown"
                                ShowLineNumbers="{Binding Path=AppSettings.ShowOutputLineNumbers}"
                                SyntaxHighlighting="DOS"
                                TabIndex="25"
                                VerticalScrollBarVisibility="Auto" />
                            <!--
                                TextBox
                                Margin="0,3,0,2"
                                VerticalAlignment="Stretch"
                                x:Name="txtStatus"
                                IsReadOnly="True"
                                TabIndex="25" FontFamily="Courier New" VerticalScrollBarVisibility="Auto" HorizontalScrollBarVisibility="Auto" /
                            -->
                        </GroupBox>
                    </Grid>
                </DockPanel>

            </DockPanel>
            <Expander
                x:Name="expControlPanel"
                Grid.Column="2"
                ContextMenu="{StaticResource expControlPanelContextMenu}"
                ExpandDirection="Left"
                IsExpanded="True">
                <Expander.Header>
                    <TextBlock
                        FontWeight="Bold"
                        Foreground="White"
                        Text="Control Panel">
                        <TextBlock.LayoutTransform>
                            <RotateTransform Angle="90" />
                        </TextBlock.LayoutTransform>
                    </TextBlock>
                </Expander.Header>

                <TabControl
                    x:Name="tabControlPanel"
                    Grid.Column="2"
                    TabStripPlacement="Bottom">
                    <TabControl.Resources>
                        <SolidColorBrush x:Key="RedBrush" Color="Red" />
                        <SolidColorBrush x:Key="GreenBrush" Color="Green" />
                        <SolidColorBrush x:Key="SolidBorderBrush" Color="#888" />
                        <SolidColorBrush x:Key="DisabledBackgroundBrush" Color="#EEE" />
                        <SolidColorBrush x:Key="DisabledBorderBrush" Color="#AAA" />
                        <SolidColorBrush x:Key="DisabledForegroundBrush" Color="#888" />
                        <Style TargetType="{x:Type TabItem}">
                            <Setter Property="Template">
                                <Setter.Value>
                                    <ControlTemplate TargetType="{x:Type TabItem}">
                                        <Grid>
                                            <Border
                                                Name="Border"
                                                Margin="0,0,-4,0"
                                                Background="{Binding TabControlBackgroundBrush}"
                                                BorderBrush="{StaticResource SolidBorderBrush}"
                                                BorderThickness="1,1,1,1"
                                                CornerRadius="0,0,2,12">
                                                <ContentPresenter
                                                    x:Name="ContentSite"
                                                    Margin="12,2,12,2"
                                                    HorizontalAlignment="Center"
                                                    VerticalAlignment="Center"
                                                    ContentSource="Header"
                                                    RecognizesAccessKey="True" />
                                            </Border>
                                        </Grid>
                                        <ControlTemplate.Triggers>
                                            <Trigger Property="IsSelected" Value="True">
                                                <Setter Property="Panel.ZIndex" Value="100" />
                                                <Setter TargetName="Border" Property="Background" Value="{Binding TabControlForegroundBrush}" />
                                                <Setter TargetName="Border" Property="BorderThickness" Value="1,1,1,0" />
                                                <Setter Property="Foreground" Value="{Binding TabControlBackgroundBrush}" />
                                            </Trigger>
                                            <Trigger Property="IsSelected" Value="False">
                                                <Setter TargetName="Border" Property="Background" Value="{Binding TabControlBackgroundBrush}" />
                                                <Setter Property="Foreground" Value="{Binding TabControlForegroundBrush}" />
                                            </Trigger>
                                            <Trigger Property="IsEnabled" Value="False">
                                                <Setter TargetName="Border" Property="Background" Value="{StaticResource DisabledBackgroundBrush}" />
                                                <Setter TargetName="Border" Property="BorderBrush" Value="{StaticResource DisabledBorderBrush}" />
                                                <Setter Property="Foreground" Value="{StaticResource DisabledForegroundBrush}" />
                                            </Trigger>
                                        </ControlTemplate.Triggers>
                                    </ControlTemplate>
                                </Setter.Value>
                            </Setter>
                            <Setter Property="HeaderTemplate">
                                <Setter.Value>
                                    <DataTemplate>
                                        <ContentPresenter Content="{TemplateBinding Content}" TextBlock.FontWeight="Bold">
                                            <ContentPresenter.LayoutTransform>
                                                <RotateTransform Angle="0" />
                                            </ContentPresenter.LayoutTransform>
                                        </ContentPresenter>
                                    </DataTemplate>
                                </Setter.Value>
                            </Setter>
                        </Style>
                    </TabControl.Resources>
                    <TabItem
                        x:Name="tabRoboCopyOptionsItem"
                        Header="RoboCopy Options"
                        ToolTip="">
                        <DockPanel LastChildFill="True">
                            <TextBlock
                                x:Name="txtPropertyGridWaterMark"
                                DockPanel.Dock="Top"
                                FontSize="20"
                                FontWeight="Bold"
                                Foreground="Red"
                                Text="{Binding PropertyGridTooltip}"
                                TextWrapping="WrapWithOverflow"
                                ToolTip="{Binding PropertyGridTooltip}"
                                Visibility="Collapsed" />
                            <sfw:PropertyGrid
                                xmlns:sfw="clr-namespace:SoftFluent.Windows;assembly=SoftFluent.Windows"
                                Name="pgAppSettings"
                                Margin="-3"
                                Background="{Binding PGControlBackgroundBrush}"
                                BorderBrush="{Binding PGControlBorderBrush}"
                                DecamelizePropertiesDisplayNames="false"
                                Foreground="{Binding PGControlForegroundBrush}"
                                GroupByCategory="True"
                                HelpVisible="True"
                                SelectedObject="{Binding AppSettings}" />
                            <!--<local:ChoPropertyGrid  Margin="-3" VerticalAlignment="Stretch" x:Name="pgAppSettings"
                                                    SelectedObject="{Binding AppSettings}"
                                                         ToolTip="{Binding PropertyGridTooltip}" Style="{x:Null}"/>-->
                            <!--<local:ExtendedPropertyGrid  Margin="-3" VerticalAlignment="Stretch" x:Name="pgAppSettings"
                                                    SelectedObject="{Binding AppSettings}" SelectedObjectName="" ShowTitle="False"
                                           ShowDescriptionByTooltip="True" FilterWatermark="{Binding PropertyGridTooltip}"
                                                         ToolTip="{Binding PropertyGridTooltip}" Style="{x:Null}"/>-->
                        </DockPanel>
                    </TabItem>
                    <TabItem
                        x:Name="tabBackupTasks"
                        Header="Backup Tasks"
                        ToolTip="">
                        <GroupBox
                            x:Name="grpBackupTasks"
                            Margin="-3"
                            Header="Backup Tasks">
                            <DockPanel LastChildFill="True">
                                <DockPanel HorizontalAlignment="Stretch" DockPanel.Dock="Top">
                                    <TextBlock DockPanel.Dock="Top" FontWeight="Bold">Directory</TextBlock>
                                    <DockPanel
                                        HorizontalAlignment="Stretch"
                                        DockPanel.Dock="Bottom"
                                        LastChildFill="True">
                                        <Button
                                            x:Name="btnFindBackupTaskDirectoryInFileExplorer"
                                            Width="20"
                                            Height="20"
                                            VerticalAlignment="Center"
                                            Click="btnFindBackupTaskDirectoryInFileExplorer_Click"
                                            DockPanel.Dock="Right"
                                            IsEnabled="{Binding BackupTaskDirStatus}"
                                            Style="{StaticResource {x:Static ToolBar.ButtonStyleKey}}"
                                            ToolTip="Find backup task directory in file explorer">
                                            <Border>
                                                <Image Source="Resources/Search.png">
                                                    <Image.Style>
                                                        <Style TargetType="{x:Type Image}">
                                                            <Style.Triggers>
                                                                <Trigger Property="IsEnabled" Value="False">
                                                                    <Setter Property="Opacity" Value="0.5" />
                                                                </Trigger>
                                                            </Style.Triggers>
                                                        </Style>
                                                    </Image.Style>
                                                </Image>
                                            </Border>
                                        </Button>
                                        <Button
                                            x:Name="btnRefreshBackupTasks"
                                            Width="20"
                                            Margin="1,0,1,2"
                                            VerticalAlignment="Bottom"
                                            Click="btnRefreshBackupTasks_Click"
                                            DockPanel.Dock="Right"
                                            IsEnabled="{Binding BackupTaskDirStatus}"
                                            Style="{StaticResource {x:Static ToolBar.ButtonStyleKey}}"
                                            ToolTip="Reload backup tasks...">
                                            <Image Source="Resources/Refresh.png">
                                                <Image.Style>
                                                    <Style TargetType="{x:Type Image}">
                                                        <Style.Triggers>
                                                            <Trigger Property="IsEnabled" Value="False">
                                                                <Setter Property="Opacity" Value="0.5" />
                                                            </Trigger>
                                                        </Style.Triggers>
                                                    </Style>
                                                </Image.Style>
                                            </Image>
                                        </Button>
                                        <Button
                                            x:Name="btnBackupTaskDirectory"
                                            Width="20"
                                            Margin="1,0,1,2"
                                            VerticalAlignment="Bottom"
                                            Click="btnBackupTaskDirectory_Click"
                                            DockPanel.Dock="Right"
                                            Style="{StaticResource {x:Static ToolBar.ButtonStyleKey}}"
                                            ToolTip="Choose backup tasks directory...">
                                            <Image Source="Resources/OpenFolder.png">
                                                <Image.Style>
                                                    <Style TargetType="{x:Type Image}">
                                                        <Style.Triggers>
                                                            <Trigger Property="IsEnabled" Value="False">
                                                                <Setter Property="Opacity" Value="0.5" />
                                                            </Trigger>
                                                        </Style.Triggers>
                                                    </Style>
                                                </Image.Style>
                                            </Image>
                                        </Button>
                                        <local:ChoMruComboBox
                                            HorizontalAlignment="Stretch"
                                            Background="{Binding BackupTaskDirStatus, Converter={StaticResource BoolToBackgroundColorConverter1}}"
                                            Foreground="{Binding BackupTaskDirStatus, Converter={StaticResource BoolToForegroundColorConverter1}}"
                                            MruSource="{Binding RecentNumbersList}"
                                            Text="{Binding Path=BackupTaskDirectory, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}" />

                                        <!--TextBox HorizontalAlignment="Stretch"
                                            x:Name="txtBackupTasksDirectory"
                                            Margin="1"
                                            TabIndex="0"
                                            Style="{StaticResource WaterMarkTextBoxStyle}"
                                            ToolTip="{Binding BackupTaskDirTooltip}"
                                                Text="{Binding Path=BackupTaskDirectory, UpdateSourceTrigger=PropertyChanged}"
                                                        Background="{Binding BackupTaskDirStatus, Converter={StaticResource BoolToBackgroundColorConverter1}}"
                                                        Foreground="{Binding BackupTaskDirStatus, Converter={StaticResource BoolToForegroundColorConverter1}}"
                                            >
                                        </TextBox-->
                                    </DockPanel>
                                </DockPanel>

                                <DockPanel LastChildFill="True">
                                    <DockPanel DockPanel.Dock="Bottom" LastChildFill="True">
                                        <StackPanel
                                            Margin="0,5,0,0"
                                            VerticalAlignment="Bottom"
                                            DockPanel.Dock="Right"
                                            Orientation="Vertical">
                                            <Button
                                                x:Name="btnCloneTask"
                                                Margin="5,0,0,0"
                                                Click="btnCloneTask_Click"
                                                Content="CLONE"
                                                DockPanel.Dock="Right"
                                                IsEnabled="{Binding CloneTaskEnabled}"
                                                Style="{DynamicResource MetroButton}"
                                                ToolTip="Clone task" />
                                            <Button
                                                x:Name="btnDeleteTask"
                                                Margin="5,5,0,0"
                                                Click="btnDeleteTask_Click"
                                                Content="DELETE"
                                                DockPanel.Dock="Right"
                                                IsEnabled="{Binding DeleteTaskEnabled}"
                                                Style="{DynamicResource MetroButton}"
                                                ToolTip="Delete task" />
                                            <Button
                                                x:Name="btnQueueTask"
                                                Margin="5,5,0,0"
                                                Click="btnQueueTask_Click"
                                                Content="QUEUE"
                                                DockPanel.Dock="Right"
                                                IsEnabled="{Binding QueueTaskEnabled}"
                                                Style="{DynamicResource MetroButton}"
                                                ToolTip="Queue task" />
                                        </StackPanel>
                                        <DockPanel LastChildFill="True">
                                            <TextBlock DockPanel.Dock="Top" FontWeight="Bold">Backup Task Comments</TextBlock>
                                            <TextBox
                                                x:Name="txtTaskComments"
                                                Height="70"
                                                Margin="0,5,0,0"
                                                Text="{Binding Path=AppSettings.Comments, UpdateSourceTrigger=PropertyChanged}"
                                                TextWrapping="WrapWithOverflow"
                                                ToolTip="Backup Task Comments"
                                                VerticalScrollBarVisibility="Auto" />
                                        </DockPanel>
                                    </DockPanel>
                                    <ListView
                                        x:Name="lstBackupTasks"
                                        Margin="0,5,0,0"
                                        VerticalAlignment="Stretch"
                                        local:ChoGridViewColumnVisibilityManager.Enabled="True"
                                        local:ChoGridViewSort.AutoSort="True"
                                        BorderThickness="1"
                                        DisplayMemberPath="FileName"
                                        FontFamily="Courier New"
                                        FontSize="12"
                                        ItemsSource="{Binding BackupTaskInfos}"
                                        PreviewKeyUp="lstBackupTasks_PreviewKeyUp"
                                        SelectedItem="{Binding SelectedBackupTaskItem}"
                                        SelectedValue="{Binding SelectedBackupTaskFilePath}"
                                        SelectedValuePath="FilePath"
                                        ToolTip="">
                                        <ListView.Resources>
                                            <ContextMenu x:Key="grdHeaderContextMenu">
                                                <MenuItem
                                                    x:Name="mnuDateCreated"
                                                    Header="Date Created"
                                                    IsCheckable="true"
                                                    IsChecked="{Binding DateCreated}" />
                                                <MenuItem
                                                    x:Name="mnuDateModified"
                                                    Header="Date Modified"
                                                    IsCheckable="true"
                                                    IsChecked="{Binding DateModified}" />
                                                <Separator />
                                                <MenuItem Header="Clone Options">
                                                    <MenuItem
                                                        Header="Keep Date Created"
                                                        IsCheckable="true"
                                                        IsChecked="{Binding KeepDateCreated}" />
                                                    <MenuItem
                                                        Header="Keep Date Modified"
                                                        IsCheckable="true"
                                                        IsChecked="{Binding KeepDateModified}" />
                                                </MenuItem>
                                                <Separator />
                                                <MenuItem
                                                    x:Name="mnuColumnToFit"
                                                    Click="mnuColumnToFit_Click"
                                                    Header="Size Column to Fit" />
                                                <MenuItem
                                                    x:Name="mnuAllColumnsToFit"
                                                    Click="mnuAllColumnsToFit_Click"
                                                    Header="Size All Columns to Fit" />
                                                <Separator />
                                                <MenuItem
                                                    Header="Confirm on Delete Task"
                                                    IsCheckable="True"
                                                    IsChecked="{Binding ConfirmOnDelete}" />
                                                <MenuItem
                                                    Header="Watch for Changes"
                                                    IsCheckable="True"
                                                    IsChecked="{Binding WatchForChanges}" />
                                            </ContextMenu>
                                            <ContextMenu x:Key="grdItemContextMenu">
                                                <MenuItem
                                                    x:Name="mnuCloneTask"
                                                    Click="mnuCloneTask_Click"
                                                    Header="Clone Task"
                                                    InputGestureText="Ctrl+V" />
                                                <MenuItem
                                                    x:Name="mnuDeleteTask"
                                                    Click="mnuDeleteTask_Click"
                                                    Header="Delete Task"
                                                    InputGestureText="Del" />
                                                <MenuItem
                                                    x:Name="mnuQueueTask"
                                                    Click="mnuQueueTask_Click"
                                                    Header="Queue Task"
                                                    InputGestureText="Ctrl+Q" />
                                                <Separator />
                                                <MenuItem Header="Clone Options">
                                                    <MenuItem
                                                        Header="Keep Date Created"
                                                        IsCheckable="true"
                                                        IsChecked="{Binding KeepDateCreated, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Window}}}" />
                                                    <MenuItem
                                                        Header="Keep Date Modified"
                                                        IsCheckable="true"
                                                        IsChecked="{Binding KeepDateModified, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Window}}}" />
                                                </MenuItem>
                                                <Separator />
                                                <MenuItem
                                                    Header="Confirm on Delete Task"
                                                    IsCheckable="True"
                                                    IsChecked="{Binding ConfirmOnDelete, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Window}}}" />
                                                <MenuItem
                                                    Header="Watch for Changes"
                                                    IsCheckable="True"
                                                    IsChecked="{Binding WatchForChanges, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Window}}}" />
                                            </ContextMenu>
                                        </ListView.Resources>
                                        <ListView.ItemContainerStyle>
                                            <Style TargetType="{x:Type ListViewItem}">
                                                <!--<EventSetter Event="PreviewMouseLeftButtonDown" Handler="OnListViewItem_PreviewMouseLeftButtonDown" />-->
                                                <Setter Property="ContextMenu" Value="{StaticResource grdItemContextMenu}" />
                                                <Style.Triggers>
                                                    <Trigger Property="IsMouseOver" Value="True">
                                                        <Setter Property="Background" Value="Transparent" />
                                                    </Trigger>
                                                    <Trigger Property="IsSelected" Value="True">
                                                        <Setter Property="Background" Value="Gray" />
                                                        <Setter Property="Foreground" Value="White" />
                                                    </Trigger>
                                                </Style.Triggers>
                                            </Style>
                                        </ListView.ItemContainerStyle>
                                        <ListView.View>
                                            <GridView AllowsColumnReorder="true" ColumnHeaderContainerStyle="{StaticResource GridViewColumnHeaderStyle1}">
                                                <GridViewColumn
                                                    x:Name="grdTaskNameColumn"
                                                    Width="{Binding TaskNameColumnWidth}"
                                                    local:ChoGridViewSort.PropertyName="TaskName"
                                                    DisplayMemberBinding="{Binding Path=TaskName}">
                                                    <GridViewColumnHeader
                                                        x:Name="grdTaskNameColumnHeader"
                                                        Click="grdBackupTaskColumnHeader_Click"
                                                        Content="TASK NAME"
                                                        ContextMenu="{StaticResource grdHeaderContextMenu}"
                                                        MouseDown="GridViewColumnHeader_MouseDown"
                                                        SizeChanged="TaskNameGridViewColumnHeader_SizeChanged"
                                                        Tag="TaskName" />
                                                </GridViewColumn>
                                                <GridViewColumn
                                                    x:Name="grdDateCreatedColumn"
                                                    Width="{Binding DateCreatedColumnWidth}"
                                                    local:ChoGridViewColumnVisibilityManager.IsVisible="{Binding DateCreatedVisibility}"
                                                    local:ChoGridViewSort.PropertyName="CreatedDate"
                                                    DisplayMemberBinding="{Binding Path=CreatedDate, StringFormat='dd-MMM-yyyy hh:mm:ss tt'}">
                                                    <GridViewColumnHeader
                                                        x:Name="grdDateCreatedColumnHeader"
                                                        Click="grdBackupTaskColumnHeader_Click"
                                                        Content="DATE CREATED"
                                                        ContextMenu="{StaticResource grdHeaderContextMenu}"
                                                        MouseDown="GridViewColumnHeader_MouseDown"
                                                        SizeChanged="DateCreatedGridViewColumnHeader_SizeChanged"
                                                        Tag="CreatedDate" />
                                                </GridViewColumn>
                                                <GridViewColumn
                                                    x:Name="grdDateModifiedColumn"
                                                    Width="{Binding DateModifiedColumnWidth}"
                                                    local:ChoGridViewColumnVisibilityManager.IsVisible="{Binding DateModifiedVisibility}"
                                                    local:ChoGridViewSort.PropertyName="ModifiedDate"
                                                    DisplayMemberBinding="{Binding Path=ModifiedDate, StringFormat='dd-MMM-yyyy hh:mm:ss tt'}">
                                                    <GridViewColumnHeader
                                                        x:Name="grdDateModifiedColumnHeader"
                                                        Click="grdBackupTaskColumnHeader_Click"
                                                        Content="DATE MODIFIED"
                                                        ContextMenu="{StaticResource grdHeaderContextMenu}"
                                                        MouseDown="GridViewColumnHeader_MouseDown"
                                                        SizeChanged="DateModifiedGridViewColumnHeader_SizeChanged"
                                                        Tag="ModifiedDate" />
                                                </GridViewColumn>
                                            </GridView>
                                        </ListView.View>
                                    </ListView>

                                    <!--<ListBox x:Name="lstBackupTasks" Margin="0,5,0,0" BorderThickness="1" BorderBrush="LightGray" VerticalAlignment="Stretch"
                                             ItemsSource="{Binding BackupTaskInfos}" SelectedValuePath="FilePath" DisplayMemberPath="FileName"
                                             SelectedValue="{Binding SelectedBackupTaskFilePath}" >-->
                                </DockPanel>
                            </DockPanel>
                        </GroupBox>
                    </TabItem>
                    <TabItem
                        x:Name="tabTaskQueue"
                        Header="Task Queue"
                        ToolTip="">
                        <GroupBox
                            x:Name="grpTaskQueue"
                            Margin="-3"
                            Header="Task Queue">
                            <DockPanel LastChildFill="True">
                                <StackPanel
                                    Margin="0,5,0,0"
                                    DockPanel.Dock="Bottom"
                                    Orientation="Horizontal">
                                    <Button
                                        x:Name="btnTaskQStopTask"
                                        Margin="0,0,0,0"
                                        Click="btnTaskQStopTask_Click"
                                        Content="STOP"
                                        IsEnabled="{Binding TaskQStopTaskEnabled}"
                                        Style="{DynamicResource MetroButton}"
                                        ToolTip="Stop task" />
                                    <!--<Button Margin="5,0,0,0" x:Name="btnTaskQMoveUpTask" Content="MOVE UP" IsEnabled="{Binding TaskQMoveUpTaskEnabled }"
                                            Style="{DynamicResource MetroButton}" Click="btnTaskQMoveUpTask_Click"  ToolTip="Move Up task"/>
                                    <Button Margin="5,0,0,0" x:Name="btnTaskQMoveDownTask" Content="MOVE DOWN" IsEnabled="{Binding TaskQMoveDownTaskEnabled }"
                                            Style="{DynamicResource MetroButton}" Click="btnTaskQMoveDownTask_Click"  ToolTip="Move Down task"/>-->
                                    <Button
                                        x:Name="btnTaskQRemoveTask"
                                        Margin="5,0,0,0"
                                        Click="btnTaskQRemoveTask_Click"
                                        Content="REMOVE"
                                        IsEnabled="{Binding TaskQRemoveTaskEnabled}"
                                        Style="{DynamicResource MetroButton}"
                                        ToolTip="Remove task" />
                                    <Button
                                        x:Name="btnOpenTaskLogFile"
                                        Margin="5,0,0,0"
                                        Click="btnOpenTaskLogFile_Click"
                                        Content="OPEN LOG FILE"
                                        DockPanel.Dock="Right"
                                        IsEnabled="{Binding OpenTaskLogFileEnabled}"
                                        Style="{DynamicResource MetroButton}"
                                        ToolTip="Open task log file" />
                                    <Button
                                        x:Name="btnOpenTaskLogFolder"
                                        Margin="5,0,0,0"
                                        Click="btnOpenTaskLogFolder_Click"
                                        Content="OPEN LOG FOLDER"
                                        DockPanel.Dock="Right"
                                        IsEnabled="{Binding OpenTaskLogFolderEnabled}"
                                        Style="{DynamicResource MetroButton}"
                                        ToolTip="Open task log folder" />
                                </StackPanel>
                                <ListView
                                    x:Name="lstTaskQueue"
                                    Margin="0,0,0,0"
                                    VerticalAlignment="Stretch"
                                    local:ChoGridViewColumnVisibilityManager.Enabled="True"
                                    local:ChoGridViewSort.AutoSort="True"
                                    BorderBrush="LightGray"
                                    BorderThickness="1"
                                    FontFamily="Courier New"
                                    FontSize="12"
                                    ItemsSource="{Binding TaskQueueItems}"
                                    PreviewKeyUp="lstTaskQueue_PreviewKeyUp"
                                    SelectedItem="{Binding SelectedTaskQueueItem}"
                                    SelectedValue="{Binding SelectedTaskQueueItemId}"
                                    SelectedValuePath="Id"
                                    ToolTip="">
                                    <ListView.Resources>
                                        <ContextMenu x:Key="grdTaskQueueHeaderContextMenu">
                                            <MenuItem
                                                x:Name="mnuTaskQColumnToFit"
                                                Click="mnuTaskQColumnToFit_Click"
                                                Header="Size Column to Fit" />
                                            <MenuItem
                                                x:Name="mnuTaskQAllColumnsToFit"
                                                Click="mnuTaskQAllColumnsToFit_Click"
                                                Header="Size All Columns to Fit" />
                                            <Separator />
                                            <MenuItem
                                                Header="Confirm on Delete Task"
                                                IsCheckable="True"
                                                IsChecked="{Binding ConfirmOnDelete}" />
                                        </ContextMenu>
                                        <ContextMenu x:Key="grdTaskQueueItemContextMenu">
                                            <MenuItem
                                                x:Name="mnuTaskQStopTask"
                                                Click="mnuCloneTask_Click"
                                                Header="Stop Task"
                                                InputGestureText="Ctrl+S"
                                                IsEnabled="{Binding TaskQStopTaskEnabled}" />
                                            <!--<MenuItem x:Name="mnuTaskQMoveUpTask" Header="Move Up Task" Click="mnuDeleteTask_Click" InputGestureText="Ctrl+Up" IsEnabled="{Binding TaskQMoveUpTaskEnabled }"/>
                                            <MenuItem x:Name="mnuTaskQMoveDownTask" Header="Move Down Task" Click="mnuDeleteTask_Click" InputGestureText="Ctrl+Down" IsEnabled="{Binding TaskQMoveDownTaskEnabled }"/>-->
                                            <MenuItem
                                                x:Name="mnuTaskQRemoveTask"
                                                Click="mnuDeleteTask_Click"
                                                Header="Remove Task"
                                                InputGestureText="Del"
                                                IsEnabled="{Binding TaskQRemoveTaskEnabled}" />
                                            <MenuItem
                                                x:Name="mnuTaskQOpenLogFile"
                                                Click="mnuTaskQOpenLogFile_Click"
                                                Header="Open log file"
                                                InputGestureText="Ctrl+O"
                                                IsEnabled="{Binding OpenTaskLogFileEnabled}" />
                                            <Separator />
                                            <MenuItem
                                                Header="Confirm on Delete Task"
                                                IsCheckable="True"
                                                IsChecked="{Binding ConfirmOnDelete, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Window}}}" />
                                        </ContextMenu>
                                    </ListView.Resources>
                                    <ListView.ItemContainerStyle>
                                        <Style TargetType="{x:Type ListBoxItem}">
                                            <!--<EventSetter Event="PreviewMouseLeftButtonDown" Handler="OnListViewItem_PreviewMouseLeftButtonDown" />-->
                                            <Setter Property="ContextMenu" Value="{StaticResource grdTaskQueueItemContextMenu}" />
                                            <Setter Property="Padding" Value="0,0,0,0" />
                                            <Setter Property="Margin" Value="0,0,0,0" />
                                            <Style.Triggers>
                                                <DataTrigger Binding="{Binding Status}" Value="3">
                                                    <Setter Property="Background" Value="DarkGreen" />
                                                    <Setter Property="Foreground" Value="White" />
                                                </DataTrigger>
                                                <DataTrigger Binding="{Binding Status}" Value="2">
                                                    <Setter Property="Background" Value="Red" />
                                                    <Setter Property="Foreground" Value="White" />
                                                </DataTrigger>
                                                <DataTrigger Binding="{Binding Status}" Value="1">
                                                    <Setter Property="Background" Value="Yellow" />
                                                    <Setter Property="Foreground" Value="Black" />
                                                </DataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </ListView.ItemContainerStyle>
                                    <ListView.View>
                                        <GridView AllowsColumnReorder="true" ColumnHeaderContainerStyle="{StaticResource GridViewColumnHeaderStyle1}">
                                            <GridViewColumn
                                                x:Name="grdTaskQIdColumn"
                                                Width="{Binding TaskQIdColumnWidth}"
                                                local:ChoGridViewSort.PropertyName="Id"
                                                DisplayMemberBinding="{Binding Path=Id}">
                                                <GridViewColumnHeader
                                                    x:Name="grdTaskQTaskIdColumnHeader"
                                                    Click="grdTaskQColumnHeader_Click"
                                                    Content="ID"
                                                    ContextMenu="{StaticResource grdTaskQueueHeaderContextMenu}"
                                                    MouseDown="GridViewTaskQColumnHeader_MouseDown"
                                                    SizeChanged="grdTaskQIdColumnHeader_SizeChanged"
                                                    Tag="TaskName" />
                                            </GridViewColumn>
                                            <GridViewColumn
                                                x:Name="grdTaskQNameColumn"
                                                Width="{Binding TaskQNameColumnWidth}"
                                                local:ChoGridViewSort.PropertyName="TaskName"
                                                DisplayMemberBinding="{Binding Path=TaskName}">
                                                <GridViewColumnHeader
                                                    x:Name="grdTaskQTaskNameColumnHeader"
                                                    Click="grdTaskQColumnHeader_Click"
                                                    Content="TASK NAME"
                                                    ContextMenu="{StaticResource grdTaskQueueHeaderContextMenu}"
                                                    MouseDown="GridViewTaskQColumnHeader_MouseDown"
                                                    SizeChanged="grdTaskQNameColumnHeader_SizeChanged"
                                                    Tag="TaskName" />
                                            </GridViewColumn>
                                            <GridViewColumn
                                                x:Name="grdTaskQQueueTimeColumn"
                                                Width="{Binding TaskQQueueTimeColumnWidth}"
                                                local:ChoGridViewColumnVisibilityManager.IsVisible="{Binding QueueTime}"
                                                local:ChoGridViewSort.PropertyName="QueueTime"
                                                DisplayMemberBinding="{Binding Path=QueueTime, StringFormat='dd-MMM-yyyy hh:mm:ss tt'}">
                                                <GridViewColumnHeader
                                                    x:Name="grdTaskQQueueTimeColumnHeader"
                                                    Click="grdTaskQColumnHeader_Click"
                                                    Content="QUEUE TIME"
                                                    ContextMenu="{StaticResource grdTaskQueueHeaderContextMenu}"
                                                    MouseDown="GridViewTaskQColumnHeader_MouseDown"
                                                    SizeChanged="grdTaskQQueueTimeColumnHeader_SizeChanged"
                                                    Tag="QueueTime" />
                                            </GridViewColumn>
                                            <GridViewColumn
                                                x:Name="grdTaskQStartTimeColumn"
                                                Width="{Binding TaskQStartTimeColumnWidth}"
                                                local:ChoGridViewColumnVisibilityManager.IsVisible="{Binding StartTime}"
                                                local:ChoGridViewSort.PropertyName="StartTime"
                                                DisplayMemberBinding="{Binding Path=StartTime, StringFormat='dd-MMM-yyyy hh:mm:ss tt'}">
                                                <GridViewColumnHeader
                                                    x:Name="grdTaskQStartTimeColumnHeader"
                                                    Click="grdTaskQColumnHeader_Click"
                                                    Content="START TIME"
                                                    ContextMenu="{StaticResource grdTaskQueueHeaderContextMenu}"
                                                    MouseDown="GridViewTaskQColumnHeader_MouseDown"
                                                    SizeChanged="grdTaskQStartTimeColumnHeader_SizeChanged"
                                                    Tag="StartTime" />
                                            </GridViewColumn>
                                            <GridViewColumn
                                                x:Name="grdTaskQEndTimeColumn"
                                                Width="{Binding DateModifiedColumnWidth}"
                                                local:ChoGridViewColumnVisibilityManager.IsVisible="{Binding EndTime}"
                                                local:ChoGridViewSort.PropertyName="EndTime"
                                                DisplayMemberBinding="{Binding Path=EndTime, StringFormat='dd-MMM-yyyy hh:mm:ss tt'}">
                                                <GridViewColumnHeader
                                                    x:Name="grdTaskQEndTimeColumnHeader"
                                                    Click="grdTaskQColumnHeader_Click"
                                                    Content="END TIME"
                                                    ContextMenu="{StaticResource grdTaskQueueHeaderContextMenu}"
                                                    MouseDown="GridViewTaskQColumnHeader_MouseDown"
                                                    SizeChanged="grdTaskQEndTimeColumnHeader_SizeChanged"
                                                    Tag="EndTime" />
                                            </GridViewColumn>
                                            <GridViewColumn
                                                x:Name="grdTaskQStatusColumn"
                                                Width="{Binding DateModifiedColumnWidth}"
                                                local:ChoGridViewColumnVisibilityManager.IsVisible="{Binding Status}"
                                                local:ChoGridViewSort.PropertyName="Status"
                                                DisplayMemberBinding="{Binding Path=Status}">
                                                <GridViewColumnHeader
                                                    x:Name="grdTaskQStatusColumnHeader"
                                                    Click="grdTaskQColumnHeader_Click"
                                                    Content="STATUS"
                                                    ContextMenu="{StaticResource grdTaskQueueHeaderContextMenu}"
                                                    MouseDown="GridViewTaskQColumnHeader_MouseDown"
                                                    SizeChanged="grdTaskQStatusColumnHeader_SizeChanged"
                                                    Tag="Status" />
                                            </GridViewColumn>
                                            <GridViewColumn
                                                x:Name="grdTaskQErrorMsgColumn"
                                                Width="{Binding DateModifiedColumnWidth}"
                                                local:ChoGridViewColumnVisibilityManager.IsVisible="{Binding ErrorMessage}"
                                                local:ChoGridViewSort.PropertyName="Status"
                                                DisplayMemberBinding="{Binding Path=ErrorMessage}">
                                                <GridViewColumnHeader
                                                    x:Name="grdTaskQErrorMsgColumnHeader"
                                                    Click="grdTaskQColumnHeader_Click"
                                                    Content="ERROR MSG"
                                                    ContextMenu="{StaticResource grdTaskQueueHeaderContextMenu}"
                                                    MouseDown="GridViewTaskQColumnHeader_MouseDown"
                                                    SizeChanged="grdTaskQErrorMsgColumnHeader_SizeChanged"
                                                    Tag="ErrorMessage" />
                                            </GridViewColumn>
                                        </GridView>
                                    </ListView.View>
                                </ListView>

                                <!--<ListBox x:Name="lstBackupTasks" Margin="0,5,0,0" BorderThickness="1" BorderBrush="LightGray" VerticalAlignment="Stretch"
                                             ItemsSource="{Binding BackupTaskInfos}" SelectedValuePath="FilePath" DisplayMemberPath="FileName"
                                             SelectedValue="{Binding SelectedBackupTaskFilePath}" >-->
                            </DockPanel>
                        </GroupBox>
                    </TabItem>
                </TabControl>
            </Expander>

            <GridSplitter
                Grid.Column="1"
                Width="1"
                HorizontalAlignment="Right"
                VerticalAlignment="Stretch"
                Background="{Binding WindowTitleBrush}"
                IsTabStop="False"
                ResizeBehavior="PreviousAndNext"
                ResizeDirection="Columns" />
        </Grid>
    </DockPanel>
</Controls:MetroWindow>
