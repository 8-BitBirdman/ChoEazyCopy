<Controls:MetroWindow
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:Controls="clr-namespace:MahApps.Metro.Controls;assembly=MahApps.Metro"
    xmlns:local="clr-namespace:ChoEazyCopy"
    xmlns:xctk="http://schemas.xceed.com/wpf/xaml/toolkit"
    x:Class="ChoEazyCopy.MainWindow"
    Title="ChoEazyCopy - Cinchoo Inc."
    Height="505"
    Width="798"
    MinHeight="505"
    MinWidth="700"
    AllowDrop="True"
    Closed="Window_Closed"
    x:Name="MyWindow"
    BorderBrush="{DynamicResource AccentColorBrush}"
    BorderThickness="1"
    TitleCaps="False"
    ResizeMode="CanResizeWithGrip"
    Loaded="MyWindow_Loaded" Icon="App.ico" Closing="Window_Closing" ContentRendered="MyWindow_ContentRendered">
    <Window.Resources>
        <ContextMenu x:Key="TextBoxContextMenu" Background="White">
            <MenuItem Command="ApplicationCommands.Copy">
                <MenuItem.Icon>
                    <Image Source="Resources/Copy.png" />
                </MenuItem.Icon>
            </MenuItem>
            <MenuItem Command="ApplicationCommands.Cut" >
                <MenuItem.Icon>
                    <Image Source="Resources/Cut.png" />
                </MenuItem.Icon>
            </MenuItem>
            <MenuItem Command="ApplicationCommands.Paste" >
                <MenuItem.Icon>
                    <Image Source="Resources/Paste.png" />
                </MenuItem.Icon>
            </MenuItem>
        </ContextMenu>
        <Style TargetType="{x:Type TextBox}">
            <Setter Property="ContextMenu" Value="{StaticResource TextBoxContextMenu}" />
        </Style>
        <Style TargetType="{x:Type Button}">
            <Style.Resources>
                <Style TargetType="{x:Type Image}">
                    <Style.Triggers>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Opacity" Value="0.5" />
                        </Trigger>
                    </Style.Triggers>
                </Style>
            </Style.Resources>
        </Style>
        <Style x:Key="WaterMarkTextBoxStyle" BasedOn="{StaticResource {x:Type TextBox}}" TargetType="{x:Type TextBox}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type TextBox}">
                        <Grid>
                            <Border x:Name="Bd" SnapsToDevicePixels="True" 
          Background="{TemplateBinding Background}" 
          BorderBrush="{TemplateBinding BorderBrush}"
          BorderThickness="{TemplateBinding BorderThickness}" >
                                <Grid>
                                    <ScrollViewer x:Name="PART_ContentHost"
                                  SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                                    <TextBlock x:Name="textBlock"
                               Opacity="0.5"
                               Text="{TemplateBinding Tag}"
                               Padding="2,0,0,0"
                               TextWrapping="Wrap"
                               Visibility="Hidden" />
                                </Grid>
                            </Border>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="Text"
                                       Value="" />
                                </MultiTrigger.Conditions>
                                <Setter Property="Visibility"
                                TargetName="textBlock"
                                Value="Visible" />
                            </MultiTrigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style
            TargetType="{x:Type TextBlock}"
            x:Key="StatusBarTextBlock">
            <Setter
                Property="TextWrapping"
                Value="NoWrap" />
            <Setter
                Property="TextTrimming"
                Value="CharacterEllipsis" />
            <Setter
                Property="Padding"
                Value="2,0" />
        </Style>
        <local:BoolInverterConverter x:Key="BoolInverterConverter1"/>
        <local:BoolInverterConverter x:Key="BoolInverterConverter2"/>
    </Window.Resources>
    <DockPanel>
        <StatusBar DockPanel.Dock="Bottom" Margin="5,0,5,5" Width="Auto">
            <StatusBarItem
                VerticalContentAlignment="Top"
                Focusable="False"
                Padding="0">
                <TextBlock
                    Style="{StaticResource StatusBarTextBlock}"
                    x:Name="sbAppStatus"><Run Text="Ready"/></TextBlock>
            </StatusBarItem>
        </StatusBar>
        <Grid>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="5" />
                <ColumnDefinition Width="300" >
                    <ColumnDefinition.Style>
                        <Style TargetType="{x:Type ColumnDefinition}">
                            <Setter Property="MinWidth" Value="150" />
                            <!-- Default MinHeight -->
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding ElementName=MyExpander, Path=IsExpanded}" Value="False">
                                    <Setter Property="MinWidth" Value="24" />
                                    <!-- MinHeight when Collapsed -->
                                    <Setter Property="MaxWidth" Value="40" />
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </ColumnDefinition.Style>
                </ColumnDefinition>
            </Grid.ColumnDefinitions>
            <DockPanel Grid.Column="0" LastChildFill="true">
                <Ribbon DockPanel.Dock="Top" x:Name="RibbonWin" SelectedIndex="0" Loaded="RibbonWin_Loaded" MinWidth="500" ContextMenu="{x:Null}">
                    <Ribbon.ApplicationMenu>
                        <RibbonApplicationMenu Visibility="Collapsed"></RibbonApplicationMenu>
                    </Ribbon.ApplicationMenu>
                    <RibbonTab Header="Home" KeyTip="H" ContextMenu="{x:Null}">
                        <RibbonGroup x:Name="HomeGroup" Header="Action" ContextMenu="{x:Null}">
                            <RibbonButton x:Name="btnRun" LargeImageSource="Resources\Run.png" Label="Run" KeyTip="R" Click="btnRun_Click"  ContextMenu="{x:Null}"/>
                            <RibbonButton x:Name="btnStop" SmallImageSource="Resources\Stop.png" Label="Stop" KeyTip="T" Click="btnStop_Click"  ContextMenu="{x:Null}"/>
                            <RibbonButton x:Name="btnClear" SmallImageSource="Resources\Erase.png" Label="Clear Output" KeyTip="E" Click="btnClear_Click"  ContextMenu="{x:Null}"/>
                            <RibbonCheckBox x:Name="btnScrollOutput" SmallImageSource="Resources\Scroll.png" Label="Scroll Output" KeyTip="L" Click="btnScrollOutput_Click"  ContextMenu="{x:Null}"/>
                        </RibbonGroup>
                        <RibbonGroup x:Name="FileGroup" Header="File" ContextMenu="{x:Null}">
                            <RibbonButton x:Name="btnNewFile" LargeImageSource="Resources\NewFile.png" Label="New" KeyTip="N" Click="btnNewFile_Click"  ContextMenu="{x:Null}"/>
                            <RibbonButton x:Name="btnOpenFile" SmallImageSource="Resources\OpenFile.png" Label="Open" KeyTip="O" Click="btnOpenFile_Click"  ContextMenu="{x:Null}"/>
                            <RibbonButton x:Name="btnSaveFile" SmallImageSource="Resources\SaveFile.png" Label="Save" KeyTip="S" Click="btnSaveFile_Click"  ContextMenu="{x:Null}"/>
                            <RibbonButton x:Name="btnSaveAsFile" SmallImageSource="Resources\SaveAsFile.png" Label="Save As" KeyTip="A" Click="btnSaveAsFile_Click"  ContextMenu="{x:Null}"/>
                        </RibbonGroup>
                        <RibbonGroup x:Name="DonateGroup" ContextMenu="{x:Null}">
                            <RibbonButton x:Name="btnDomate" LargeImageSource="Resources\Donate.png" Label="Donate" KeyTip="D" Click="BtnDonate_Click" ToolTip="Your supoort is much appreciated." ContextMenu="{x:Null}"/>
                        </RibbonGroup>
                        <RibbonGroup VerticalAlignment="Center" ContextMenu="{x:Null}">
                            <DockPanel LastChildFill="True">
                                <TextBlock DockPanel.Dock="Bottom">Settings File</TextBlock>
                                <TextBlock x:Name="tbSettingsName" FontSize="24" FontWeight="Bold" Foreground="DarkBlue" 
                                           Width="Auto" VerticalAlignment="Stretch" FontFamily="Verdana"/>
                            </DockPanel>
                        </RibbonGroup>
                    </RibbonTab>
                </Ribbon>

                <DockPanel
        HorizontalAlignment="Stretch"
        x:Name="dockPanel1"
        VerticalAlignment="Stretch"
        LastChildFill="True"
        FocusManager.FocusedElement="{Binding ElementName=txtFolder}">
                    <Grid
            Width="Auto"
            DockPanel.Dock="Top">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition />
                        </Grid.ColumnDefinitions>
                        <GroupBox
                    x:Name="grpFolders"
                Margin="5"
                Height="Auto"
                Grid.Column="0"
                Header="Choose Folders">
                            <Grid
                    Width="Auto"
                    Height="Auto"
                        >
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="35*" />
                                    <ColumnDefinition Width="145*"/>
                                    <ColumnDefinition Width="368*"/>
                                    <ColumnDefinition Width="20" />
                                </Grid.ColumnDefinitions>
                                <Grid.RowDefinitions>
                                    <RowDefinition />
                                    <RowDefinition />
                                </Grid.RowDefinitions>
                                <TextBox 
                        x:Name="txtSourceDirectory"
                        VerticalAlignment="Stretch"
                        Grid.Row="0"
                        Grid.Column="0"
                        Margin="1"
                        TabIndex="0" Grid.ColumnSpan="3" 
                        Style="{StaticResource WaterMarkTextBoxStyle}" 
                        Tag="Choose source directory..."
                        ToolTip="Choose source directory..."
                            Text="{Binding Path=SourceDirectory, UpdateSourceTrigger=PropertyChanged}"
                        />
                                <Button Style="{StaticResource {x:Static ToolBar.ButtonStyleKey}}"
                        Grid.Row="0"
                        Grid.Column="3"
                        Margin="1,0,1,2"
                        x:Name="btnSourceDirBrowse"
                        Click="btnSourceDirBrowse_Click"
                        TabIndex="1" ToolTip="Choose source directory..." VerticalAlignment="Bottom">
                                    <Image Source="Resources/OpenFolder.png" >
                                        <Image.Style>
                                            <Style TargetType="{x:Type Image}">
                                                <Style.Triggers>
                                                    <Trigger Property="IsEnabled" Value="False">
                                                        <Setter Property="Opacity" Value="0.5" />
                                                    </Trigger>
                                                </Style.Triggers>
                                            </Style>
                                        </Image.Style>
                                    </Image>
                                </Button>
                                <TextBox
                        x:Name="txtDestDirectory" 
                        Grid.Row="1" 
                        Grid.Column="0"
                        Margin="1"
                        TabIndex="2" Grid.ColumnSpan="3" 
                        Style="{StaticResource WaterMarkTextBoxStyle}"
                        Tag="Choose destination directory..."
                        ToolTip="Choose destination directory..."
                            Text="{Binding Path=DestDirectory, UpdateSourceTrigger=PropertyChanged}"
                            />
                                <Button Style="{StaticResource {x:Static ToolBar.ButtonStyleKey}}"
                        Grid.Row="1"
                        Grid.Column="3"
                        Margin="1,2,1,1"
                        x:Name="btnDestDirBrowse"
                        TabIndex="3" ToolTip="Choose destination directory..."
                                Click="btnDestDirBrowse_Click" >
                                    <Image Source="Resources/OpenFolder.png" >
                                        <Image.Style>
                                            <Style TargetType="{x:Type Image}">
                                                <Style.Triggers>
                                                    <Trigger Property="IsEnabled" Value="False">
                                                        <Setter Property="Opacity" Value="0.5" />
                                                    </Trigger>
                                                </Style.Triggers>
                                            </Style>
                                        </Image.Style>
                                    </Image>
                                </Button>
                            </Grid>
                        </GroupBox>
                    </Grid>
                    <Grid
            Width="Auto">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition />
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition
                    Height="100"
                    MinHeight="100" />
                            <RowDefinition
                    Height="Auto" />
                            <RowDefinition
                    Height="*"
                    MinHeight="100" />
                        </Grid.RowDefinitions>
                        <GroupBox
                Margin="5,0,5,0"
                Grid.Row="0"
                Header="RoboCopy Command"
                HorizontalAlignment="Stretch"
                VerticalAlignment="Stretch">
                            <DockPanel LastChildFill="True">
                            <TextBox Visibility="Collapsed"
                    Margin="0,3,0,2"
                    HorizontalAlignment="Stretch"
                    VerticalAlignment="Stretch"
                    Name="txtRoboCopyCmdEx"
                    TabIndex="24" TextWrapping="Wrap" VerticalScrollBarVisibility="Auto" IsReadOnly="True" TextChanged="txtRoboCopyCmdEx_TextChanged" />
                                <TextBox
                    Margin="0,3,0,2"
                    HorizontalAlignment="Stretch"
                    VerticalAlignment="Stretch"
                    Name="txtRoboCopyCmd"
                    TabIndex="24" TextWrapping="Wrap" VerticalScrollBarVisibility="Auto" IsReadOnly="True" TextChanged="txtRoboCopyCmd_TextChanged" />
                            </DockPanel>
                        </GroupBox>
                        <GridSplitter
                Margin="5,5,5,0"
                ResizeDirection="Rows"
                Grid.Row="1"
                Height="1"
                HorizontalAlignment="Stretch" IsTabStop="False" />
                        <GroupBox
                Margin="5,0,5,5"
                Grid.Row="2"
                Header="Output"
                VerticalAlignment="Stretch">
                            <TextBox
                    Margin="0,3,0,2"
                    VerticalAlignment="Stretch"
                    x:Name="txtStatus"
                    IsReadOnly="True"
                    TabIndex="25" FontFamily="Courier New" VerticalScrollBarVisibility="Auto" HorizontalScrollBarVisibility="Auto" />
                        </GroupBox>
                    </Grid>
                </DockPanel>

            </DockPanel>
            <Expander Grid.Column="2" ExpandDirection="Left" IsExpanded="True" x:Name="MyExpander">
                <Expander.Header>
                    <TextBlock Text="RoboCopy Options" Foreground="White" FontWeight="Bold">
                        <TextBlock.LayoutTransform>
                            <RotateTransform Angle="90"/>
                        </TextBlock.LayoutTransform>
                    </TextBlock>
                </Expander.Header>
                <xctk:PropertyGrid VerticalAlignment="Stretch" Name="pgAppSettings" SelectedObject="{Binding}" SelectedObjectName="" ShowTitle="False" ShowDescriptionByTooltip="True" />
            </Expander>
            <GridSplitter Grid.Column="1" Width="3" HorizontalAlignment="Right" VerticalAlignment="Stretch" ResizeBehavior="PreviousAndNext" IsTabStop="False" ResizeDirection="Columns" />
        </Grid>
    </DockPanel>
</Controls:MetroWindow>
